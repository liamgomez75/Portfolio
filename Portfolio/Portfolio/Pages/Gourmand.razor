@page "/gourmand"

<h3>Project Gourmand</h3>
<img src="Images/gourmand_login.png" style="max-width:720px;" />
<p>This project was undertaken in the completion of my Software Engineering class at California State University San Marcos. In a team of 4 peers, I helped design a mobile application for restaurant owners and customers. The application is meant to serve as a restaurant menu, ordering system, and a basic data interface to provide owners with statistics about their restaurant.</p>

<h4>Application Design</h4>
<p>Project Gourmand was made using the Model View Controller design pattern. It was implemented using Android Studio and Java. The backend database was implemented using SQLite.</p>

<h4>My Role</h4>
<p>My role in this project was to implement the backend services for the application. I was responsible for creating and maintaining the back-end database and its services that interact with the front end. In my time with this project, I created an API that allowed for the front-end team to communicate with the database without needing to touch the lower level back-end infrastructures of the project. My code was designed utilizing the static-factory design pattern. This allowed others in the team to utilize my code without needing to interact with the underlying implementations of the code itself. Additionally, implementing this separation allowed for me to freely change the code without others needing to worry about having to update their code to accommodate changes.</p>

<h4>The BDI</h4>
<img src="Images/gourmand_bdi.png" style="max-width:720px;"/>
<p>I developed the Basic Data Interface page for this application. This was an interface for the database that provided information to restaurant owners about things such as statistics on the popularity of dishes, and a history of placed orders.</p>

<h4>Challenges</h4>
<p>This project taught me a great deal about the process of software development. I was tasked with designing an efficient database using SQLite from the ground up. Designing this database to determine the best way to store and query data was both a challenging and rewarding experience. I learned a lot about optimizing database queries, database security, and organizing data based on relational models. Organizing data in a way that is optimal for a relational database requires an understanding of how SQL queries are made, and how tables interact with each other. Despite this challenge, I was able to design and implement a database that was normalized and free from anomalies.</p>
@code {

}
